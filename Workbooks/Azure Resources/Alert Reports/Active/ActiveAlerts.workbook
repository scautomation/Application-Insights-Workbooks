{
    "type": 12,
    "content": {
      "version": "NotebookGroup/1.0",
      "groupType": "editable",
      "items": [
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "alertsmanagementresources\r\n| extend FireTime = todatetime(properties.essentials.startDateTime), \r\n         Severity = tostring(properties.essentials.severity), \r\n         MonitorCondition = tostring(properties.essentials.monitorCondition), \r\n         AlertTarget = tostring(properties.essentials.targetResourceType), \r\n         MonitorService = tostring(properties.essentials.monitorService)\r\n| where FireTime {TimeRange}\r\n| extend AlertTarget = case(\r\n        MonitorService == 'ActivityLog Administrative', 'ActivityLog',\r\n        AlertTarget == 'microsoft.insights/components', 'App Insights',\r\n        AlertTarget == 'microsoft.operationalinsights/workspaces', 'Log Analytics', \r\n        AlertTarget)\r\n| where AlertTarget in~ ({AlertTarget}) or '*' in~ ({AlertTarget})\r\n| summarize Sev0 = countif(Severity == \"Sev0\"), \r\n            Sev1 = countif(Severity == \"Sev1\"), \r\n            Sev2 = countif(Severity == \"Sev2\"), \r\n            Sev3 = countif(Severity == \"Sev3\"), \r\n            Sev4 = countif(Severity == \"Sev4\"),\r\n            Resolved = countif(MonitorCondition == \"Resolved\"),\r\n            Fired = countif(MonitorCondition == \"Fired\"),\r\n            Total = count()\r\n| extend Chart = pack_all()\r\n| project Chart\r\n| mv-expand bagexpansion = array Chart\r\n| project tostring(name = Chart[0]), todouble(val = Chart[1])\r\n| sort by name desc",
            "size": 3,
            "title": "Alerts for all Selected Subscriptions",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "visualization": "tiles",
            "tileSettings": {
              "titleContent": {
                "columnMatch": "name",
                "formatter": 18,
                "formatOptions": {
                  "thresholdsOptions": "icons",
                  "thresholdsGrid": [
                    {
                      "operator": "==",
                      "thresholdValue": "Total",
                      "representation": "Alert",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Fired",
                      "representation": "Fired",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Resolved",
                      "representation": "Resolved",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Sev4",
                      "representation": "Sev4",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Sev3",
                      "representation": "Sev3",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Sev2",
                      "representation": "Sev2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Sev1",
                      "representation": "Sev1",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Sev0",
                      "representation": "Sev0",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "cancelled",
                      "text": "{0}{1}"
                    }
                  ]
                }
              },
              "leftContent": {
                "columnMatch": "val",
                "formatter": 12,
                "formatOptions": {
                  "palette": "blue"
                }
              },
              "showBorder": true
            },
            "graphSettings": {
              "type": 0
            }
          },
          "name": "query - Active Alerts Count",
          "styleSettings": {
            "showBorder": true
          }
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "alertsmanagementresources\r\n| extend FireTime = todatetime(properties.essentials.startDateTime), \r\n         Severity = tostring(properties.essentials.severity), \r\n         MonitorCondition = tostring(properties.essentials.monitorCondition), \r\n         AlertTarget = tostring(properties.essentials.targetResourceType), \r\n         MonitorService = tostring(properties.essentials.monitorService)\r\n| where FireTime {TimeRange}\r\n| extend AlertTarget = case(\r\n        MonitorService == 'ActivityLog Administrative', 'ActivityLog',\r\n        AlertTarget == 'microsoft.insights/components', 'App Insights',\r\n        AlertTarget == 'microsoft.operationalinsights/workspaces', 'Log Analytics', \r\n        AlertTarget)\r\n| where AlertTarget in~ ({AlertTarget}) or '*' in~ ({AlertTarget})\r\n| summarize Sev0 = countif(Severity == \"Sev0\"), \r\n            Sev1 = countif(Severity == \"Sev1\"), \r\n            Sev2 = countif(Severity == \"Sev2\"), \r\n            Sev3 = countif(Severity == \"Sev3\"), \r\n            Sev4 = countif(Severity == \"Sev4\"),\r\n            Resolved = countif(MonitorCondition == \"Resolve\"),\r\n            Fired = countif(MonitorCondition == \"Fired\"),\r\n            Total = count() by subscriptionId\r\n| sort by Fired desc",
            "size": 3,
            "title": "Alerts by Subscription",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "visualization": "table",
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "$gen_group",
                  "formatter": 15,
                  "formatOptions": {
                    "linkTarget": null,
                    "showIcon": true
                  }
                },
                {
                  "columnMatch": "Group",
                  "formatter": 15,
                  "formatOptions": {
                    "linkTarget": null,
                    "showIcon": true
                  }
                },
                {
                  "columnMatch": "subscriptionId",
                  "formatter": 5
                },
                {
                  "columnMatch": "Total",
                  "formatter": 22,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "Total Alerts",
                      "columnSettings": [
                        {
                          "columnName": "Sev0",
                          "color": "redBright"
                        },
                        {
                          "columnName": "Sev1",
                          "color": "orange"
                        },
                        {
                          "columnName": "Sev2",
                          "color": "yellow"
                        },
                        {
                          "columnName": "Sev3",
                          "color": "blue"
                        },
                        {
                          "columnName": "Sev4",
                          "color": "blueDark"
                        }
                      ]
                    }
                  }
                }
              ],
              "hierarchySettings": {
                "treeType": 1,
                "groupBy": [
                  "subscriptionId"
                ],
                "expandTopLevel": true,
                "finalBy": "Total"
              },
              "sortBy": [
                {
                  "itemKey": "Fired",
                  "sortOrder": 2
                }
              ]
            },
            "sortBy": [
              {
                "itemKey": "Fired",
                "sortOrder": 2
              }
            ],
            "tileSettings": {
              "titleContent": {
                "columnMatch": "name",
                "formatter": 18,
                "formatOptions": {
                  "thresholdsOptions": "icons",
                  "thresholdsGrid": [
                    {
                      "operator": "==",
                      "thresholdValue": "Total",
                      "representation": "Alert",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Fired",
                      "representation": "Fired",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Resolved",
                      "representation": "Resolved",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Sev4",
                      "representation": "Sev4",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Sev3",
                      "representation": "Sev3",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Sev2",
                      "representation": "Sev2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Sev1",
                      "representation": "Sev1",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Sev0",
                      "representation": "Sev0",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "cancelled",
                      "text": "{0}{1}"
                    }
                  ]
                }
              },
              "leftContent": {
                "columnMatch": "val",
                "formatter": 12,
                "formatOptions": {
                  "palette": "blue"
                }
              },
              "showBorder": true
            },
            "graphSettings": {
              "type": 0
            }
          },
          "name": "query - Active Alerts by Subscription",
          "styleSettings": {
            "showBorder": true
          }
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "alertsmanagementresources\r\n| extend FireTime = todatetime(properties.essentials.startDateTime), \r\n         LastModifiedTime = todatetime(properties.essentials.lastModifiedDateTime),\r\n         Severity = tostring(properties.essentials.severity), \r\n         MonitorCondition = tostring(properties.essentials.monitorCondition), \r\n         AlertTarget = tostring(properties.essentials.targetResourceType), \r\n         MonitorService = tostring(properties.essentials.monitorService),\r\n         ResolvedTime = todatetime(properties.essentials.monitorConditionResolvedDateTime)\r\n| where FireTime {TimeRange}\r\n| extend AlertTarget = case(\r\n                MonitorService == 'ActivityLog Administrative', 'ActivityLog',\r\n                AlertTarget == 'microsoft.insights/components', 'App Insights',\r\n                AlertTarget == 'microsoft.operationalinsights/workspaces', 'Log Analytics', \r\n                AlertTarget)   \r\n| where AlertTarget in~ ({AlertTarget}) or '*' in~ ({AlertTarget})           \r\n| mv-expand Condition = properties.context.context.condition.allOf\r\n| extend SignalLogic = case(\r\n                MonitorService == \"VM Insights - Health\", strcat(\"VM Health for \", properties.essentials.targetResourceName, \" Changed from \", properties.context.monitorStateBeforeAlertCreated, \" to \", properties.context.monitorStateWhenAlertCreated),\r\n                AlertTarget == \"ActivityLog\", strcat(\"When the Activity Log has Category = \", properties.context.context.activityLog.properties.eventCategory, \" and Signal name = \", properties.context.context.activityLog.properties.message),\r\n                MonitorService == \"Smart Detector\", strcat(properties.SmartDetectorName, \" Detected failure rate of \", properties.DetectedFailureRate, \" above normal failure rate of \", properties.context.NormalFailureRate),\r\n                MonitorService == \"Log Analytics\", strcat(\"Alert when \", properties.context.AlertType, \" is \", properties.context.AlertThresholdOperator, \" threshold \", properties.context.AlertThresholdValue),\r\n                MonitorService == \"ActivityLog Autoscale\", strcat(properties.context.context.activityLog.operationName, \" from \", properties.context.context.activityLog.properties.oldInstancesCount, \" to \", properties.context.context.activityLog.properties.newInstancesCount),\r\n                strcat(\"Alert when metric \", Condition.metricName, Condition.timeAggregation, \" is \", Condition.operator, \" threshold \", Condition.threshold)),\r\n         Query = case(\r\n                 MonitorService == \"Log Alerts V2\", tostring(Condition.searchQuery),\r\n                 MonitorService == \"Log Analytics\", tostring(properties.context.SearchQuery), \"N/A\"),\r\n         MetricValue = iff(MonitorService == \"Log Analytics\", toint(properties.context.ResultCount), toint(Condition.metricValue)),\r\n         AffectedResource = iff(AlertTarget == \"ActivityLog\", properties.context.context.activityLog.subscriptionId, tostring(properties.essentials.targetResourceName))\r\n| where AffectedResource in ({AffectedResource})\r\n| extend OpenTime = iff(MonitorCondition == \"Resolved\", datetime_diff('minute', ResolvedTime, FireTime), datetime_diff('minute', now(), FireTime)),\r\n         Details = pack_all()\r\n| project name, AlertTarget, id, subscriptionId, AffectedResource, MonitorCondition, FireTime, LastModifiedTime, OpenTime, SignalLogic, Query, MetricValue, Details",
            "size": 2,
            "showAnalytics": true,
            "title": "Detailed Alert view for Selected Timerange",
            "noDataMessage": "No Alerts in the Assigned Time Range",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "$gen_group",
                  "formatter": 15,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkIsContextBlade": true,
                    "showIcon": true,
                    "bladeOpenContext": {
                      "bladeName": "AlertDetailsTemplateBlade",
                      "extensionName": "Microsoft_Azure_Monitoring",
                      "bladeParameters": [
                        {
                          "name": "alertId",
                          "source": "column",
                          "value": "id"
                        },
                        {
                          "name": "alertName",
                          "source": "column",
                          "value": "name"
                        },
                        {
                          "name": "invokedFrom",
                          "source": "static",
                          "value": "Workbooks"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Group",
                  "formatter": 15,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkIsContextBlade": true,
                    "showIcon": true,
                    "bladeOpenContext": {
                      "bladeName": "AlertDetailsTemplateBlade",
                      "extensionName": "Microsoft_Azure_Monitoring",
                      "bladeParameters": [
                        {
                          "name": "alertId",
                          "source": "column",
                          "value": "id"
                        },
                        {
                          "name": "alertName",
                          "source": "column",
                          "value": "name"
                        },
                        {
                          "name": "invokedFrom",
                          "source": "static",
                          "value": "Workbooks"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "name",
                  "formatter": 5,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkIsContextBlade": true,
                    "bladeOpenContext": {
                      "bladeName": "AlertDetailsTemplateBlade",
                      "extensionName": "Microsoft_Azure_Monitoring",
                      "bladeParameters": [
                        {
                          "name": "alertId",
                          "source": "column",
                          "value": "id"
                        },
                        {
                          "name": "alertName",
                          "source": "column",
                          "value": "name"
                        },
                        {
                          "name": "invokedFrom",
                          "source": "static",
                          "value": "Workbooks"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "View alert details"
                  }
                },
                {
                  "columnMatch": "id",
                  "formatter": 5
                },
                {
                  "columnMatch": "subscriptionId",
                  "formatter": 15,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkIsContextBlade": true,
                    "showIcon": true,
                    "bladeOpenContext": {
                      "bladeName": "AlertDetailsTemplateBlade",
                      "extensionName": "Microsoft_Azure_Monitoring",
                      "bladeParameters": [
                        {
                          "name": "alertId",
                          "source": "column",
                          "value": "id"
                        },
                        {
                          "name": "alertName",
                          "source": "column",
                          "value": "name"
                        },
                        {
                          "name": "invokedFrom",
                          "source": "static",
                          "value": "Workbooks"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "MonitorCondition",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "==",
                        "thresholdValue": "Fired",
                        "representation": "2",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Resolved",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "FireTime",
                  "formatter": 6
                },
                {
                  "columnMatch": "LastModifiedTime",
                  "formatter": 6
                },
                {
                  "columnMatch": "OpenTime",
                  "formatter": 8,
                  "formatOptions": {
                    "palette": "greenRed"
                  },
                  "numberFormat": {
                    "unit": 25,
                    "options": {
                      "style": "decimal"
                    }
                  }
                },
                {
                  "columnMatch": "Details",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "CellDetails",
                    "linkLabel": "🔍 View Details",
                    "linkIsContextBlade": true
                  }
                }
              ],
              "rowLimit": 10000,
              "filter": true,
              "hierarchySettings": {
                "treeType": 1,
                "groupBy": [
                  "subscriptionId"
                ],
                "expandTopLevel": true,
                "finalBy": "name"
              }
            }
          },
          "showPin": true,
          "name": "query - Active Alerts Detailed",
          "styleSettings": {
            "showBorder": true
          }
        }
      ]
    },
    "conditionalVisibility": {
      "parameterName": "tab",
      "comparison": "isEqualTo",
      "value": "active"
    },
    "name": "group - Active Alerts - Count"
  }